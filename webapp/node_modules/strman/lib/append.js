'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _appendarray = require('./appendarray');

var _appendarray2 = _interopRequireDefault(_appendarray);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @module append
 * @description
 * Append Strings on Value with spreaded arguments
 * ## Install
 * Install all functions of strman
 * ```sh
 * yarn add strman
 * ```
 * or just the append function
 * ```sh
 * yarn add strman.append
 * ```
 * ## Usage
 * ```javascript
 * import { append } from 'strman'
 * // OR
 * import append from 'strman.append'
 * ```
 * @param {String} value Initial value
 * @param {String} appends Spreaded array with strings to append
 * @example
 * append('s', 'tr', 'm', 'an')
 * // => 'strman'
 * @returns {String} The concatenated string
 */
exports.default = function (value) {
  for (var _len = arguments.length, appends = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    appends[_key - 1] = arguments[_key];
  }

  return (0, _appendarray2.default)(value, appends);
};