'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _contains = require('./contains');

var _contains2 = _interopRequireDefault(_contains);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var containsAll = function containsAll(value, caseSensitive, previous, current) {
  if (!(0, _contains2.default)(value, current, caseSensitive)) {
    return false;
  }
  return previous && true;
};

/**
 * @module containsAll
 * @description
 * Verifies that all needles are contained in value
 * ## Install
 * Install all functions of strman
 * ```sh
 * yarn add strman
 * ```
 * or just the containsAll function
 * ```sh
 * yarn add strman.containsall
 * ```
 * ## Usage
 * ```javascript
 * import { containsAll } from 'strman'
 * // OR
 * import containsAll from 'strman.containsall'
 * ```
 * @param {String} value The input string
 * @param {String[]} needles An array of strings which are checked to be contained within `value`
 * @param {Boolean} [caseSensitive=true] Use case (in-)sensitive matching
 * @example
 * const title = 'Daniel Leite'
 * const needles = ['Leite', 'Daniel']
 * containsAll(title, needles)
 * // => true
 * @returns {Boolean} True if all `needles` are contained
 */

exports.default = function (value, needles) {
  var caseSensitive = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;

  if (needles.length > 0) {
    return needles.reduce(containsAll.bind(undefined, value, caseSensitive), true);
  }

  return false;
};