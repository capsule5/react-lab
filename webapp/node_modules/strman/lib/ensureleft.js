'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _startswith = require('./startswith');

var _startswith2 = _interopRequireDefault(_startswith);

var _append = require('./append');

var _append2 = _interopRequireDefault(_append);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @module ensureLeft
 * @description
 * Ensures that the `value` begins with `substr`. If it doesn't, it's prepended.
 * ## Install
 * Install all functions of strman
 * ```sh
 * yarn add strman
 * ```
 * or just the ensureLeft function
 * ```sh
 * yarn add strman.ensureleft
 * ```
 * ## Usage
 * ```javascript
 * import { ensureLeft } from 'strman'
 * // OR
 * import ensureLeft from 'strman.ensureleft'
 * ```
 * @param {String} value The input string
 * @param {String} substr The substr to be ensured to be left
 * @param {Boolean} [caseSensitive=true]
 * Use case (in-)sensitive matching for determining if `value` already starts with `substr`
 * @example
 * const value = 'Leite'
 * const substr = 'Daniel '
 * ensureLeft(value, substr)
 * // => 'Daniel Leite'
 * @returns {String} The string which is guarenteed to start with `substr`
 */
exports.default = function (value, substr) {
  var caseSensitive = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;

  if (!(0, _startswith2.default)(value, substr, 0, caseSensitive)) {
    return (0, _append2.default)(substr, value);
  }

  return value;
};