'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _case = require('./lib/case');

var _case2 = _interopRequireDefault(_case);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @module lastIndefOf
 * @description
 * The lastIndexOf() method returns the index within the calling String object of the last
 * occurrence of the specified value, searching backwards from fromIndex. Returns -1 if the
 * value is not found.
 * ## Install
 * Install all functions of strman
 * ```sh
 * yarn add strman
 * ```
 * or just the lastIndefOf function
 * ```sh
 * yarn add strman.lastindexof
 * ```
 * ## Usage
 * ```javascript
 * import { lastIndefOf } from 'strman'
 * // OR
 * import lastIndefOf from 'strman.lastindexof'
 * ```
 * @param {String} value The String!
 * @param {String} needle Value to search.
 * @param {Number} [offset = undefined] Offset to search.
 * @param {Boolean} [caseSensitive = true] if you use caseSensitive to test.
 * @example
 * const title = 'strman strman'
 * result = lastIndexOf(title, 'str')
 * // => 7
 * @returns {Number} Return position of the last occurrence of 'needle'.
 */
exports.default = function (value, needle) {
  var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;
  var caseSensitive = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;
  return (0, _case2.default)(value, caseSensitive).lastIndexOf((0, _case2.default)(needle, caseSensitive), offset);
};