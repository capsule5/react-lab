'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _substr = require('./substr');

var _substr2 = _interopRequireDefault(_substr);

var _append = require('./append');

var _append2 = _interopRequireDefault(_append);

var _repeat = require('./repeat');

var _repeat2 = _interopRequireDefault(_repeat);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @module leftPad
 * @description
 * Returns a new string of a given length such that the beginning of the string is padded.
 * ## Install
 * Install all functions of strman
 * ```sh
 * yarn add strman
 * ```
 * or just the leftPad function
 * ```sh
 * yarn add strman.leftpad
 * ```
 * ## Usage
 * ```javascript
 * import { leftPad } from 'strman'
 * // OR
 * import leftPad from 'strman.leftpad'
 * ```
 * @param {String} value - The String!
 * @param {Number} length - Max length of String.
 * @param {Char} [char = ' '] - Char to repeat.
 * @example
 * const title = 'strman'
 * leftPad(title, 10, 0)
 * // => '0000strman'
 * @returns {String}  String pad.
 */
exports.default = function (value, length) {
  var char = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ' ';

  var result = value;
  var newchar = String(char);

  if (newchar.length > 1) {
    newchar = (0, _substr2.default)(newchar, 0, 1);
  }

  var newlength = length - value.length;
  result = (0, _append2.default)((0, _repeat2.default)(newchar, newlength), result);

  return result;
};