'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _startswith = require('./startswith');

var _startswith2 = _interopRequireDefault(_startswith);

var _substr = require('./substr');

var _substr2 = _interopRequireDefault(_substr);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @module removeLeft
 * @description
 * Returns a new string with the 'prefix' removed, if present.
 * ## Install
 * Install all functions of strman
 * ```sh
 * yarn add strman
 * ```
 * or just the removeLeft function
 * ```sh
 * yarn add strman.removeleft
 * ```
 * ## Usage
 * ```javascript
 * import { removeLeft } from 'strman'
 * // OR
 * import removeLeft from 'strman.removeleft'
 * ```
 * @param {String} value The String!
 * @param {String} prefix String to remove on left.
 * @param {Boolean} [caseSensitive = true] If you need to caseSensitive.
 * @example
 * const title = 'strman'
 * removeLeft(title, 'str')
 * // => 'man'
 * @returns {String} The String without prefix!
 */
exports.default = function (value, prefix) {
  var caseSensitive = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;

  if ((0, _startswith2.default)(value, prefix, 0, caseSensitive)) {
    return (0, _substr2.default)(value, prefix.length);
  }
  return value;
};