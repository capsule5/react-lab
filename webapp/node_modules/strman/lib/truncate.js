'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _substr = require('./substr');

var _substr2 = _interopRequireDefault(_substr);

var _append2 = require('./append');

var _append3 = _interopRequireDefault(_append2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @module truncate
 * @description
 * Truncate the unsecured form string, cutting the independent string of required position.
 * ## Install
 * Install all functions of strman
 * ```sh
 * yarn add strman
 * ```
 * or just the truncate function
 * ```sh
 * yarn add strman.truncate
 * ```
 * ## Usage
 * ```javascript
 * import { truncate } from 'strman'
 * // OR
 * import truncate from 'strman.truncate'
 * ```
 * @param {String} value - Value will be truncated unsecurely.
 * @param {Number} length - Size of the returned string.
 * @param {String} [_append = ''] - Value that will be added to the end of the return string.
 * @example
 * const title = 'A Javascript string manipulation library.'
 * truncate(title, 16, '...')
 * // => 'A Javascript ...'
 * @returns {String}  String truncated unsafely.
 */
exports.default = function (value, length) {
  var _append = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';

  if (length === 0) {
    return '';
  }

  if (length >= value.length) {
    return value;
  }

  var truncated = (0, _substr2.default)(value, 0, length - _append.length);

  return (0, _append3.default)(truncated, _append);
};